#!/bin/bash

##--default variables

acme_dir="/var/www/html"
acme_challenge="$acme_dir/.well-known/acme-challenge/"
acme_remove="$acme_dir/.well-known"

initialize() {
if [ -f /etc/lsb-release ]; then
    . /etc/lsb-release
    DISTRO=$DISTRIB_ID
elif [ -f /etc/debian_version ]; then
    DISTRO=Debian
    # XXX or Ubuntu
else [ -f /etc/redhat-release ];
    DISTRO="Red Hat"
    # XXX or CentOS or Fedora
fi
}

install() {
initialize

if [ "$DISTRO" = "Ubuntu" ] || [ "$DISTRO" = "Debian" ]
then
 sudo apt-get install git bc wget curl
elif [ "$DISTRO" = "RED HAT" ]; then
  yum install git bc wget curl
else
  exit 0
fi
}

clone() {
cd /tmp/
git clone https://github.com/Neilpang/acme.sh.git
cd acme.sh/
sudo ./acme.sh --install
}

usage() {

echo "Usage:  letsencrypt[OPTION]"
  echo
  echo "Options:"
  echo " --install  <domainame> <domainip>"
  echo "--remove domainname <domainname>"
  echo "--autorenew domainname <domainname>"
  echo "--help"
  echo
}

parse_params() {

while [ "$1" != "" ];
  do
    token="$1"
    shift
    case "$token" in
      (--install)
        domainname="$1"
        domainip="$2"
        main_install
        shift
        ;;

      (--remove)
       domainname="$1"
       main_remove
       shift
       ;;

      (--autorenew)
        domainname="$1"
        auto_renew
       shift
       ;;

     (help|usage)
        usage
        exit 0
        ;;

      (*)
        usage
        exit 1
        ;;

    esac
  done
}

genssl_cert() {
mkdir -p $acme_dir

mkdir -vp $acme_challenge

chown -R www-data:www-data $acme_challenge

chmod -R 0555 $acme_challenge

mkdir -p /etc/nginx/ssl/$domainname/

}

install_cert() {

cd /etc/nginx/ssl/$domainname/

source ~/.bashrc

openssl dhparam -out dhparams.pem 4096

ln -s /root/.acme.sh/acme.sh /usr/bin/acme.sh

acme.sh --issue -w /var/www/html -d ${domainname}  -k 4096

mkdir -p /var/log/nginx/$domainname

cp /etc/nginx/sites-available/default /etc/nginx/sites-available/nginxcopy

cat >> /etc/nginx/sites-available/default  <<EOF
server {
    #------- Start SSL config with http2 support ----#
    listen $domainip:443 http2;
    server_name $domainname;
    ssl on;
    ssl_certificate /etc/nginx/ssl/$domainname/$domainname.cer;
    ssl_certificate_key /etc/nginx/ssl/$domainname/$domainname.key;
    ssl_session_timeout 30m;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS;
    ssl_session_cache shared:SSL:10m;
    ssl_dhparam /etc/nginx/ssl/$domainname/dhparams.pem;
    ssl_prefer_server_ciphers on;

    ## Improves TTFB by using a smaller SSL buffer than the nginx default
    ssl_buffer_size 8k;

    ## Enables OCSP stapling
    ssl_stapling on;
    resolver 8.8.8.8;
    ssl_stapling_verify on;

    ## Send header to tell the browser to prefer https to http traffic
    add_header Strict-Transport-Security max-age=31536000;

    ## SSL logs ##
    access_log /var/log/nginx/$domainname/ssl_access.log;
    error_log /var/log/nginx/$domainname/ssl_error.log;
    #-------- END SSL config -------##

    # Add rest of your config below like document path and more ##
}

EOF

if [ "$DISTRO" = "Ubuntu" ] || [ "$DISTRO" = "Debian" ]
then
  acme.sh --installcert -d $domainname --keypath /etc/nginx/ssl/$domainname/$domainname.key --fullchainpath /etc/nginx/ssl/$domainname/$domainname.cer --reloadCmd 'service nginx restart'
elif [ "$DISTRO" = "RED HAT" ]; then
 acme.sh --installcert -d $domainname --keypath /etc/nginx/ssl/$domainname/$domainname.key --fullchainpath /etc/nginx/ssl/$domainname/$domainname.cer --reloadCmd 'systemctl reload nginx'
else
 exit 0
fi
}


main_install() {
install
clone
genssl_cert
install_cert
}

main_remove() {
remove_cert
}

remove_cert() {
rm -rf $acme_remove
rm -rf /etc/nginx/ssl/$domainname
rm -rf /var/log/nginx/$domainname
cp /etc/nginx/sites-available/default /etc/nginx/sites-available/sslbk
mv /etc/nginx/sites-available/nginxcopy /etc/nginx/sites-available/default
}

auto_renew() {
acme.sh --renew -d $domainname
}

parse_params "$@"
